"""
Makes comparisons between our ONCvar data and previous studies.

This module has functions that generate the answers to questions 
like "How many of our variables are previously known (a) stars or
(b) variables?",  "How many of our periodic variables are are newly
determined to be periodic?", "How do our periods compare to previously
published periods?".

These functions operate on the output table generated by orion_tablemate.py 
and tablemate_script.py.

"""

import numpy as np

from tablemate_script import *

# A. How many of our variables are previously known stars?
# B. How many of our variables are previously known variables?
# C. How many of our periodic variables are new period determinations?
# D. How do our periods compare to previously published periods?

# We want to do a couple things. 
# One: for a given subset of literature tables, see how many matches
#   a given source has; and to count how many sources have zero matches. 
#    (In the case of question A, the "given subset" is
#     ALL of the literature tables, plus SIMBAD. For question B, it's
#     tables that identify variables specifically. For question C, it's 
#     tables that identify periodic variables, but since some tables might
#     mix periodic and nonperiodic variables and so I'll need to also access
#     the "period" column contained therein, which requires Two.)
# Two: for input tables, access given columns in those tables corresponding
#   to an input source.


# This is a table I made and then attached 
mated_oncvar = atpy.Table("~/Dropbox/Bo_Tom/aux_tables/matched_table_withSIMBAD_2013_2_25.fits")
oncvar_spread = atpy.Table("~/DropboxBo_Tom/aux_tables/ONCvar_spreadsheet_withSIMBADnames.fits")


# Builds a dict for the source. 
# the length of the dict corresponds 
# The desired table aliases are possible keys, added only if there's 
# a corresponding value in the columns. Value: Possibly a tuple of (name, index).
# Returns two lists: ONCvar ID, above dict. Then you can 
# NO the above is silly. JUST TELL US HOW MANY NON-NULL MATCHES IT HAS AMONG THE GIVEN TABLES.
 
def source_tablematch_counter(table, matches='All'):
    """
    Counts how many times each source has a match.

    Compares the sources in the primary table to the matched tables
    that have already been cross-matched using tablemate_script.

    Parameters
    ----------
    table : atpy.Table
        Output of tablemate_script containing desired sources.
    matches : list of str | 'All', optional
        Which columns of the mated table do we want to scan?
        Default is 'All', i.e. any column that ends in _name, _ID, or _index.
 
    Returns
    -------
    
    """

# we'll be scanning table.columns.keys shortly

def how_many_stars_are_new():
    """
    Figures out how many stars are unknown in any previous catalog.
    
    """
    pass

def how_many_variables_are_new():
    """
    Figures out how many variables were previously unknown as variables.

    """
    pass
    
def source_period_digger():
    """
    Extracts literature periods, if they exist, for every star.

    """
    pass
